package com.beans;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;


public class Campaign {
	

	private String nomeCampagna;
	private String owner;
	private int kValutations;
	private int pixelline;
	
	
	public String getNomeCampagna() {
		return nomeCampagna;
	}
	public void setNomeCampagna(String nomeCampagna) {
		this.nomeCampagna = nomeCampagna;
	}
	public String getOwner() {
		return owner;
	}
	public void setOwner(String owner) {
		this.owner = owner;
	}

	public int getkValutations() {
		return kValutations;
	}
	public void setkValutations(int kValutations) {
		this.kValutations = kValutations;
	}
	
	
	public int getPixelline() {
		return pixelline;
	}
	public void setPixelline(int pixelline) {
		this.pixelline = pixelline;
	}
	
	public List<Image> loadCampaignImagesWorker(User user){

		List<Image> images = new ArrayList<Image>();
		
		try{

			Class.forName("com.mysql.jdbc.Driver");

			//creating connection with the database 
			Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/progetto_web","root","root");
			
			String query = "select * from workers_images where campaign=? and worker=? and selected=?";
			PreparedStatement ps = connection.prepareStatement(query);
			ps.setString(1, this.getNomeCampagna());
			ps.setString(2, user.getUsername());
			ps.setString(3, "0");
			ResultSet rs = ps.executeQuery();

			while(rs.next())
			{
				Image i = new Image();
				i.setCampaign(rs.getString("campaign"));
				i.setName(rs.getString("name_image"));
				images.add(i);
			}

		}catch(Exception e){

			e.printStackTrace();
		}

		return images;

	}
	
	public List<Image> loadCampaignImagesManager(){

		List<Image> images = new ArrayList<Image>();
				
		try{

			Class.forName("com.mysql.jdbc.Driver");

			//creating connection with the database 
			Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/progetto_web","root","root");
			
			String queryCampaign = "select * from campaigns where name=?";
			PreparedStatement ps = connection.prepareStatement(queryCampaign);
			ps.setString(1, this.getNomeCampagna());
			ResultSet rs = ps.executeQuery();
			
			if(rs.next()){
				
				this.setkValutations(rs.getInt("kvalutations"));
			}
					
			
			String query = "select * from images where campaignRelated=?";
			PreparedStatement psImage = connection.prepareStatement(query);
			psImage.setString(1, this.getNomeCampagna());
			ResultSet rsImage = psImage.executeQuery();

			while(rsImage.next())
			{
				Image i = new Image();
				i.setCampaign(rsImage.getString("campaignRelated"));
				i.setName(rsImage.getString("name_image"));
				i.setValutazioni_pos(rsImage.getInt("valutazioni_pos"));
				i.setValutazioni_neg(rsImage.getInt("valutazioni_neg"));
				
				if(rsImage.getInt("valutazioni_pos") >= this.getkValutations())
				{
					System.out.println("Sono entrato perchè" + rsImage.getInt("valutazioni_pos") +" è maggiore di" + this.getkValutations());
					String update = "update images set status = 1 where name_image=?";
					PreparedStatement ups = connection.prepareStatement(update);
					ups.setString(1, rsImage.getString("name_image"));
					ups.executeUpdate();
					ups.close();
					i.setStatus(1);
					
				}else if(rsImage.getInt("valutazioni_neg") > this.getkValutations()){
					String update = "update images set status = 2 where name_image=?";
					PreparedStatement ups = connection.prepareStatement(update);
					ups.setString(1, rsImage.getString("name_image"));
					ups.executeUpdate();
					ups.close();
					i.setStatus(2);
				}
				
				images.add(i);
				
			}
			ps.close();
			psImage.close();
		}catch(Exception e){

			e.printStackTrace();
		}

		return images;

	}
	
}